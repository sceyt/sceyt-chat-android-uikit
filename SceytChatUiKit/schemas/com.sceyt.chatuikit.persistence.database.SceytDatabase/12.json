{
  "formatVersion": 1,
  "database": {
    "version": 12,
    "identityHash": "208e5baea655e4e044a01f3cbeca53c4",
    "entities": [
      {
        "tableName": "channels",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`chat_id` INTEGER NOT NULL, `parentChannelId` INTEGER, `uri` TEXT, `type` TEXT NOT NULL, `subject` TEXT, `avatarUrl` TEXT, `metadata` TEXT, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL, `messagesClearedAt` INTEGER NOT NULL, `memberCount` INTEGER NOT NULL, `createdById` TEXT, `userRole` TEXT, `unread` INTEGER NOT NULL, `newMessageCount` INTEGER NOT NULL, `newMentionCount` INTEGER NOT NULL, `newReactedMessageCount` INTEGER NOT NULL, `hidden` INTEGER NOT NULL, `archived` INTEGER NOT NULL, `muted` INTEGER NOT NULL, `mutedTill` INTEGER, `pinnedAt` INTEGER, `lastReceivedMessageId` INTEGER NOT NULL, `lastDisplayedMessageId` INTEGER NOT NULL, `messageRetentionPeriod` INTEGER NOT NULL, `lastMessageTid` INTEGER, `lastMessageAt` INTEGER, `pending` INTEGER NOT NULL, `isSelf` INTEGER NOT NULL DEFAULT false, PRIMARY KEY(`chat_id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "chat_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "parentChannelId",
            "columnName": "parentChannelId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "uri",
            "columnName": "uri",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "subject",
            "columnName": "subject",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "avatarUrl",
            "columnName": "avatarUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "metadata",
            "columnName": "metadata",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "messagesClearedAt",
            "columnName": "messagesClearedAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "memberCount",
            "columnName": "memberCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdById",
            "columnName": "createdById",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "userRole",
            "columnName": "userRole",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "unread",
            "columnName": "unread",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "newMessageCount",
            "columnName": "newMessageCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "newMentionCount",
            "columnName": "newMentionCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "newReactedMessageCount",
            "columnName": "newReactedMessageCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "hidden",
            "columnName": "hidden",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "archived",
            "columnName": "archived",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "muted",
            "columnName": "muted",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "mutedTill",
            "columnName": "mutedTill",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "pinnedAt",
            "columnName": "pinnedAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "lastReceivedMessageId",
            "columnName": "lastReceivedMessageId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastDisplayedMessageId",
            "columnName": "lastDisplayedMessageId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "messageRetentionPeriod",
            "columnName": "messageRetentionPeriod",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastMessageTid",
            "columnName": "lastMessageTid",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "lastMessageAt",
            "columnName": "lastMessageAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "pending",
            "columnName": "pending",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isSelf",
            "columnName": "isSelf",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "false"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "chat_id"
          ]
        },
        "indices": [
          {
            "name": "index_channels_type",
            "unique": false,
            "columnNames": [
              "type"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_channels_type` ON `${TABLE_NAME}` (`type`)"
          },
          {
            "name": "index_channels_subject",
            "unique": false,
            "columnNames": [
              "subject"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_channels_subject` ON `${TABLE_NAME}` (`subject`)"
          },
          {
            "name": "index_channels_createdAt",
            "unique": false,
            "columnNames": [
              "createdAt"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_channels_createdAt` ON `${TABLE_NAME}` (`createdAt`)"
          },
          {
            "name": "index_channels_userRole",
            "unique": false,
            "columnNames": [
              "userRole"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_channels_userRole` ON `${TABLE_NAME}` (`userRole`)"
          },
          {
            "name": "index_channels_lastMessageAt",
            "unique": false,
            "columnNames": [
              "lastMessageAt"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_channels_lastMessageAt` ON `${TABLE_NAME}` (`lastMessageAt`)"
          },
          {
            "name": "index_channels_pending",
            "unique": false,
            "columnNames": [
              "pending"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_channels_pending` ON `${TABLE_NAME}` (`pending`)"
          },
          {
            "name": "index_channels_isSelf",
            "unique": false,
            "columnNames": [
              "isSelf"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_channels_isSelf` ON `${TABLE_NAME}` (`isSelf`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "users",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` TEXT NOT NULL, `firstName` TEXT, `lastName` TEXT, `avatarURL` TEXT, `metadata` TEXT, `activityStatus` INTEGER, `blocked` INTEGER NOT NULL, `state` INTEGER, `status` TEXT, `lastActiveAt` INTEGER, PRIMARY KEY(`user_id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "firstName",
            "columnName": "firstName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lastName",
            "columnName": "lastName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "avatarURL",
            "columnName": "avatarURL",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "metadata",
            "columnName": "metadata",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "activityStatus",
            "columnName": "activityStatus",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "blocked",
            "columnName": "blocked",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "presence.state",
            "columnName": "state",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "presence.status",
            "columnName": "status",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "presence.lastActiveAt",
            "columnName": "lastActiveAt",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "user_id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "UserChatLink",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `user_id` TEXT NOT NULL, `chat_id` INTEGER NOT NULL, `role` TEXT NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "chatId",
            "columnName": "chat_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "role",
            "columnName": "role",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "uniqueUserInChat",
            "unique": true,
            "columnNames": [
              "chat_id",
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `uniqueUserInChat` ON `${TABLE_NAME}` (`chat_id`, `user_id`)"
          },
          {
            "name": "index_UserChatLink_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_UserChatLink_user_id` ON `${TABLE_NAME}` (`user_id`)"
          },
          {
            "name": "index_UserChatLink_chat_id",
            "unique": false,
            "columnNames": [
              "chat_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_UserChatLink_chat_id` ON `${TABLE_NAME}` (`chat_id`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "messages",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`tid` INTEGER NOT NULL, `message_id` INTEGER, `channelId` INTEGER NOT NULL, `body` TEXT NOT NULL, `type` TEXT NOT NULL, `metadata` TEXT, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL, `incoming` INTEGER NOT NULL, `isTransient` INTEGER NOT NULL, `silent` INTEGER NOT NULL, `deliveryStatus` INTEGER NOT NULL, `state` INTEGER NOT NULL, `fromId` TEXT, `markerCount` TEXT, `mentionedUsersIds` TEXT, `parentId` INTEGER, `replyCount` INTEGER NOT NULL, `displayCount` INTEGER NOT NULL, `autoDeleteAt` INTEGER, `bodyAttribute` TEXT, `unList` INTEGER NOT NULL, `messageId` INTEGER, `userId` TEXT, `hops` INTEGER, PRIMARY KEY(`tid`))",
        "fields": [
          {
            "fieldPath": "tid",
            "columnName": "tid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "id",
            "columnName": "message_id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "channelId",
            "columnName": "channelId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "body",
            "columnName": "body",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "metadata",
            "columnName": "metadata",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "incoming",
            "columnName": "incoming",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isTransient",
            "columnName": "isTransient",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "silent",
            "columnName": "silent",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "deliveryStatus",
            "columnName": "deliveryStatus",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "state",
            "columnName": "state",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "fromId",
            "columnName": "fromId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "markerCount",
            "columnName": "markerCount",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "mentionedUsersIds",
            "columnName": "mentionedUsersIds",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "parentId",
            "columnName": "parentId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "replyCount",
            "columnName": "replyCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "displayCount",
            "columnName": "displayCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "autoDeleteAt",
            "columnName": "autoDeleteAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "bodyAttribute",
            "columnName": "bodyAttribute",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "unList",
            "columnName": "unList",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "forwardingDetailsDb.messageId",
            "columnName": "messageId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "forwardingDetailsDb.userId",
            "columnName": "userId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "forwardingDetailsDb.hops",
            "columnName": "hops",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "tid"
          ]
        },
        "indices": [
          {
            "name": "index_messages_message_id",
            "unique": true,
            "columnNames": [
              "message_id"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_messages_message_id` ON `${TABLE_NAME}` (`message_id`)"
          },
          {
            "name": "index_messages_channelId",
            "unique": false,
            "columnNames": [
              "channelId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_messages_channelId` ON `${TABLE_NAME}` (`channelId`)"
          },
          {
            "name": "index_messages_createdAt",
            "unique": false,
            "columnNames": [
              "createdAt"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_messages_createdAt` ON `${TABLE_NAME}` (`createdAt`)"
          },
          {
            "name": "index_messages_deliveryStatus",
            "unique": false,
            "columnNames": [
              "deliveryStatus"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_messages_deliveryStatus` ON `${TABLE_NAME}` (`deliveryStatus`)"
          },
          {
            "name": "index_messages_unList",
            "unique": false,
            "columnNames": [
              "unList"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_messages_unList` ON `${TABLE_NAME}` (`unList`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "MentionUserMessageLink",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`messageTid` INTEGER NOT NULL, `user_id` TEXT NOT NULL, PRIMARY KEY(`messageTid`, `user_id`), FOREIGN KEY(`messageTid`) REFERENCES `messages`(`tid`) ON UPDATE NO ACTION ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED)",
        "fields": [
          {
            "fieldPath": "messageTid",
            "columnName": "messageTid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "messageTid",
            "user_id"
          ]
        },
        "indices": [
          {
            "name": "index_MentionUserMessageLink_messageTid",
            "unique": false,
            "columnNames": [
              "messageTid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_MentionUserMessageLink_messageTid` ON `${TABLE_NAME}` (`messageTid`)"
          },
          {
            "name": "index_MentionUserMessageLink_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_MentionUserMessageLink_user_id` ON `${TABLE_NAME}` (`user_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "messages",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "messageTid"
            ],
            "referencedColumns": [
              "tid"
            ]
          }
        ]
      },
      {
        "tableName": "DraftMessageEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`chatId` INTEGER NOT NULL, `message` TEXT, `createdAt` INTEGER NOT NULL, `replyOrEditMessageId` INTEGER, `isReplyMessage` INTEGER, `styleRanges` TEXT, PRIMARY KEY(`chatId`))",
        "fields": [
          {
            "fieldPath": "chatId",
            "columnName": "chatId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "message",
            "columnName": "message",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "replyOrEditMessageId",
            "columnName": "replyOrEditMessageId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "isReplyMessage",
            "columnName": "isReplyMessage",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "styleRanges",
            "columnName": "styleRanges",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "chatId"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "DraftMessageUserLink",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`chatId` INTEGER NOT NULL, `user_id` TEXT NOT NULL, PRIMARY KEY(`chatId`, `user_id`), FOREIGN KEY(`chatId`) REFERENCES `DraftMessageEntity`(`chatId`) ON UPDATE NO ACTION ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED)",
        "fields": [
          {
            "fieldPath": "chatId",
            "columnName": "chatId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "chatId",
            "user_id"
          ]
        },
        "indices": [
          {
            "name": "index_DraftMessageUserLink_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_DraftMessageUserLink_user_id` ON `${TABLE_NAME}` (`user_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "DraftMessageEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "chatId"
            ],
            "referencedColumns": [
              "chatId"
            ]
          }
        ]
      },
      {
        "tableName": "AttachmentEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`primaryKey` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `id` INTEGER, `messageId` INTEGER NOT NULL, `messageTid` INTEGER NOT NULL, `channelId` INTEGER NOT NULL, `userId` TEXT, `name` TEXT NOT NULL, `type` TEXT NOT NULL, `metadata` TEXT, `fileSize` INTEGER NOT NULL, `createdAt` INTEGER NOT NULL, `url` TEXT, `filePath` TEXT, `originalFilePath` TEXT, FOREIGN KEY(`messageTid`) REFERENCES `messages`(`tid`) ON UPDATE NO ACTION ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED)",
        "fields": [
          {
            "fieldPath": "primaryKey",
            "columnName": "primaryKey",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "messageId",
            "columnName": "messageId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "messageTid",
            "columnName": "messageTid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "channelId",
            "columnName": "channelId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "metadata",
            "columnName": "metadata",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "fileSize",
            "columnName": "fileSize",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "filePath",
            "columnName": "filePath",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "originalFilePath",
            "columnName": "originalFilePath",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "primaryKey"
          ]
        },
        "indices": [
          {
            "name": "index_AttachmentEntity_messageTid_url",
            "unique": true,
            "columnNames": [
              "messageTid",
              "url"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_AttachmentEntity_messageTid_url` ON `${TABLE_NAME}` (`messageTid`, `url`)"
          },
          {
            "name": "index_AttachmentEntity_id",
            "unique": false,
            "columnNames": [
              "id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_AttachmentEntity_id` ON `${TABLE_NAME}` (`id`)"
          },
          {
            "name": "index_AttachmentEntity_messageTid",
            "unique": false,
            "columnNames": [
              "messageTid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_AttachmentEntity_messageTid` ON `${TABLE_NAME}` (`messageTid`)"
          },
          {
            "name": "index_AttachmentEntity_type",
            "unique": false,
            "columnNames": [
              "type"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_AttachmentEntity_type` ON `${TABLE_NAME}` (`type`)"
          },
          {
            "name": "index_AttachmentEntity_createdAt",
            "unique": false,
            "columnNames": [
              "createdAt"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_AttachmentEntity_createdAt` ON `${TABLE_NAME}` (`createdAt`)"
          },
          {
            "name": "index_AttachmentEntity_url",
            "unique": false,
            "columnNames": [
              "url"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_AttachmentEntity_url` ON `${TABLE_NAME}` (`url`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "messages",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "messageTid"
            ],
            "referencedColumns": [
              "tid"
            ]
          }
        ]
      },
      {
        "tableName": "MarkerEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`messageId` INTEGER NOT NULL, `userId` TEXT NOT NULL, `name` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, `primaryKey` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, FOREIGN KEY(`messageId`) REFERENCES `messages`(`message_id`) ON UPDATE NO ACTION ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED)",
        "fields": [
          {
            "fieldPath": "messageId",
            "columnName": "messageId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "primaryKey",
            "columnName": "primaryKey",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "primaryKey"
          ]
        },
        "indices": [
          {
            "name": "index_MarkerEntity_messageId_name_userId",
            "unique": true,
            "columnNames": [
              "messageId",
              "name",
              "userId"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_MarkerEntity_messageId_name_userId` ON `${TABLE_NAME}` (`messageId`, `name`, `userId`)"
          },
          {
            "name": "index_MarkerEntity_messageId",
            "unique": false,
            "columnNames": [
              "messageId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_MarkerEntity_messageId` ON `${TABLE_NAME}` (`messageId`)"
          },
          {
            "name": "index_MarkerEntity_name",
            "unique": false,
            "columnNames": [
              "name"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_MarkerEntity_name` ON `${TABLE_NAME}` (`name`)"
          },
          {
            "name": "index_MarkerEntity_createdAt",
            "unique": false,
            "columnNames": [
              "createdAt"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_MarkerEntity_createdAt` ON `${TABLE_NAME}` (`createdAt`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "messages",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "messageId"
            ],
            "referencedColumns": [
              "message_id"
            ]
          }
        ]
      },
      {
        "tableName": "ReactionEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `messageId` INTEGER NOT NULL, `reaction_key` TEXT NOT NULL, `score` INTEGER NOT NULL, `reason` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, `fromId` TEXT, PRIMARY KEY(`id`), FOREIGN KEY(`messageId`) REFERENCES `messages`(`message_id`) ON UPDATE NO ACTION ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "messageId",
            "columnName": "messageId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "key",
            "columnName": "reaction_key",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "score",
            "columnName": "score",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "reason",
            "columnName": "reason",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "fromId",
            "columnName": "fromId",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_ReactionEntity_messageId_reaction_key_fromId",
            "unique": true,
            "columnNames": [
              "messageId",
              "reaction_key",
              "fromId"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_ReactionEntity_messageId_reaction_key_fromId` ON `${TABLE_NAME}` (`messageId`, `reaction_key`, `fromId`)"
          },
          {
            "name": "index_ReactionEntity_messageId",
            "unique": false,
            "columnNames": [
              "messageId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ReactionEntity_messageId` ON `${TABLE_NAME}` (`messageId`)"
          },
          {
            "name": "index_ReactionEntity_reaction_key",
            "unique": false,
            "columnNames": [
              "reaction_key"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ReactionEntity_reaction_key` ON `${TABLE_NAME}` (`reaction_key`)"
          },
          {
            "name": "index_ReactionEntity_fromId",
            "unique": false,
            "columnNames": [
              "fromId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ReactionEntity_fromId` ON `${TABLE_NAME}` (`fromId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "messages",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "messageId"
            ],
            "referencedColumns": [
              "message_id"
            ]
          }
        ]
      },
      {
        "tableName": "ReactionTotalEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `messageId` INTEGER NOT NULL, `reaction_key` TEXT NOT NULL, `score` INTEGER NOT NULL, `count` INTEGER NOT NULL, FOREIGN KEY(`messageId`) REFERENCES `messages`(`message_id`) ON UPDATE NO ACTION ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "messageId",
            "columnName": "messageId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "key",
            "columnName": "reaction_key",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "score",
            "columnName": "score",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "count",
            "columnName": "count",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_ReactionTotalEntity_messageId_reaction_key",
            "unique": true,
            "columnNames": [
              "messageId",
              "reaction_key"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_ReactionTotalEntity_messageId_reaction_key` ON `${TABLE_NAME}` (`messageId`, `reaction_key`)"
          },
          {
            "name": "index_ReactionTotalEntity_messageId",
            "unique": false,
            "columnNames": [
              "messageId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ReactionTotalEntity_messageId` ON `${TABLE_NAME}` (`messageId`)"
          },
          {
            "name": "index_ReactionTotalEntity_reaction_key",
            "unique": false,
            "columnNames": [
              "reaction_key"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ReactionTotalEntity_reaction_key` ON `${TABLE_NAME}` (`reaction_key`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "messages",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "messageId"
            ],
            "referencedColumns": [
              "message_id"
            ]
          }
        ]
      },
      {
        "tableName": "ChatUserReactionEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `messageId` INTEGER NOT NULL, `channelId` INTEGER NOT NULL, `reaction_key` TEXT NOT NULL, `score` INTEGER NOT NULL, `reason` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, `fromId` TEXT, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "messageId",
            "columnName": "messageId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "channelId",
            "columnName": "channelId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "key",
            "columnName": "reaction_key",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "score",
            "columnName": "score",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "reason",
            "columnName": "reason",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "fromId",
            "columnName": "fromId",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_ChatUserReactionEntity_messageId_channelId_reaction_key_fromId",
            "unique": true,
            "columnNames": [
              "messageId",
              "channelId",
              "reaction_key",
              "fromId"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_ChatUserReactionEntity_messageId_channelId_reaction_key_fromId` ON `${TABLE_NAME}` (`messageId`, `channelId`, `reaction_key`, `fromId`)"
          },
          {
            "name": "index_ChatUserReactionEntity_messageId",
            "unique": false,
            "columnNames": [
              "messageId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ChatUserReactionEntity_messageId` ON `${TABLE_NAME}` (`messageId`)"
          },
          {
            "name": "index_ChatUserReactionEntity_channelId",
            "unique": false,
            "columnNames": [
              "channelId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ChatUserReactionEntity_channelId` ON `${TABLE_NAME}` (`channelId`)"
          },
          {
            "name": "index_ChatUserReactionEntity_reaction_key",
            "unique": false,
            "columnNames": [
              "reaction_key"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ChatUserReactionEntity_reaction_key` ON `${TABLE_NAME}` (`reaction_key`)"
          },
          {
            "name": "index_ChatUserReactionEntity_fromId",
            "unique": false,
            "columnNames": [
              "fromId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ChatUserReactionEntity_fromId` ON `${TABLE_NAME}` (`fromId`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "PendingMarker",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`primaryKey` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `channelId` INTEGER NOT NULL, `messageId` INTEGER NOT NULL, `name` TEXT NOT NULL, FOREIGN KEY(`messageId`) REFERENCES `messages`(`message_id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "primaryKey",
            "columnName": "primaryKey",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "channelId",
            "columnName": "channelId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "messageId",
            "columnName": "messageId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "primaryKey"
          ]
        },
        "indices": [
          {
            "name": "index_PendingMarker_messageId_name",
            "unique": true,
            "columnNames": [
              "messageId",
              "name"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_PendingMarker_messageId_name` ON `${TABLE_NAME}` (`messageId`, `name`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "messages",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "messageId"
            ],
            "referencedColumns": [
              "message_id"
            ]
          }
        ]
      },
      {
        "tableName": "pendingReaction",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`messageId` INTEGER NOT NULL, `reaction_key` TEXT NOT NULL, `score` INTEGER NOT NULL, `reason` TEXT NOT NULL DEFAULT '', `enforceUnique` INTEGER NOT NULL DEFAULT false, `count` INTEGER NOT NULL, `channelId` INTEGER NOT NULL, `isAdd` INTEGER NOT NULL, `createdAt` INTEGER NOT NULL, `incomingMsg` INTEGER NOT NULL DEFAULT false, `id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, FOREIGN KEY(`messageId`) REFERENCES `messages`(`message_id`) ON UPDATE NO ACTION ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED)",
        "fields": [
          {
            "fieldPath": "messageId",
            "columnName": "messageId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "key",
            "columnName": "reaction_key",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "score",
            "columnName": "score",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "reason",
            "columnName": "reason",
            "affinity": "TEXT",
            "notNull": true,
            "defaultValue": "''"
          },
          {
            "fieldPath": "enforceUnique",
            "columnName": "enforceUnique",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "false"
          },
          {
            "fieldPath": "count",
            "columnName": "count",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "channelId",
            "columnName": "channelId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isAdd",
            "columnName": "isAdd",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "incomingMsg",
            "columnName": "incomingMsg",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "false"
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_pendingReaction_messageId_reaction_key",
            "unique": true,
            "columnNames": [
              "messageId",
              "reaction_key"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_pendingReaction_messageId_reaction_key` ON `${TABLE_NAME}` (`messageId`, `reaction_key`)"
          },
          {
            "name": "index_pendingReaction_messageId",
            "unique": false,
            "columnNames": [
              "messageId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_pendingReaction_messageId` ON `${TABLE_NAME}` (`messageId`)"
          },
          {
            "name": "index_pendingReaction_reaction_key",
            "unique": false,
            "columnNames": [
              "reaction_key"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_pendingReaction_reaction_key` ON `${TABLE_NAME}` (`reaction_key`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "messages",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "messageId"
            ],
            "referencedColumns": [
              "message_id"
            ]
          }
        ]
      },
      {
        "tableName": "PendingMessageState",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`messageId` INTEGER NOT NULL, `channelId` INTEGER NOT NULL, `state` INTEGER NOT NULL, `editBody` TEXT, `deleteOnlyForMe` INTEGER NOT NULL, PRIMARY KEY(`messageId`))",
        "fields": [
          {
            "fieldPath": "messageId",
            "columnName": "messageId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "channelId",
            "columnName": "channelId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "state",
            "columnName": "state",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "editBody",
            "columnName": "editBody",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "deleteOnlyForMe",
            "columnName": "deleteOnlyForMe",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "messageId"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "AttachmentPayLoad",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `messageTid` INTEGER NOT NULL, `transferState` INTEGER, `progressPercent` REAL, `url` TEXT, `filePath` TEXT, FOREIGN KEY(`messageTid`) REFERENCES `messages`(`tid`) ON UPDATE NO ACTION ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "messageTid",
            "columnName": "messageTid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "transferState",
            "columnName": "transferState",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "progressPercent",
            "columnName": "progressPercent",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "filePath",
            "columnName": "filePath",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_AttachmentPayLoad_messageTid",
            "unique": true,
            "columnNames": [
              "messageTid"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_AttachmentPayLoad_messageTid` ON `${TABLE_NAME}` (`messageTid`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "messages",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "messageTid"
            ],
            "referencedColumns": [
              "tid"
            ]
          }
        ]
      },
      {
        "tableName": "FileChecksum",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`checksum` INTEGER NOT NULL, `resizedFilePath` TEXT, `url` TEXT, `metadata` TEXT, `fileSize` INTEGER, PRIMARY KEY(`checksum`))",
        "fields": [
          {
            "fieldPath": "checksum",
            "columnName": "checksum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "resizedFilePath",
            "columnName": "resizedFilePath",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "metadata",
            "columnName": "metadata",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "fileSize",
            "columnName": "fileSize",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "checksum"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "LinkDetails",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`link` TEXT NOT NULL, `url` TEXT, `title` TEXT, `description` TEXT, `siteName` TEXT, `faviconUrl` TEXT, `imageUrl` TEXT, `imageWidth` INTEGER, `imageHeight` INTEGER, `thumb` TEXT, PRIMARY KEY(`link`))",
        "fields": [
          {
            "fieldPath": "link",
            "columnName": "link",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "siteName",
            "columnName": "siteName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "faviconUrl",
            "columnName": "faviconUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "imageUrl",
            "columnName": "imageUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "imageWidth",
            "columnName": "imageWidth",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "imageHeight",
            "columnName": "imageHeight",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "thumb",
            "columnName": "thumb",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "link"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "LoadRange",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`startId` INTEGER NOT NULL, `endId` INTEGER NOT NULL, `channelId` INTEGER NOT NULL, `rowId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL)",
        "fields": [
          {
            "fieldPath": "startId",
            "columnName": "startId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "endId",
            "columnName": "endId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "channelId",
            "columnName": "channelId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "rowId",
            "columnName": "rowId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "rowId"
          ]
        },
        "indices": [
          {
            "name": "index_LoadRange_startId_channelId",
            "unique": true,
            "columnNames": [
              "startId",
              "channelId"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_LoadRange_startId_channelId` ON `${TABLE_NAME}` (`startId`, `channelId`)"
          },
          {
            "name": "index_LoadRange_endId_channelId",
            "unique": true,
            "columnNames": [
              "endId",
              "channelId"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_LoadRange_endId_channelId` ON `${TABLE_NAME}` (`endId`, `channelId`)"
          },
          {
            "name": "index_LoadRange_startId",
            "unique": false,
            "columnNames": [
              "startId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LoadRange_startId` ON `${TABLE_NAME}` (`startId`)"
          },
          {
            "name": "index_LoadRange_endId",
            "unique": false,
            "columnNames": [
              "endId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LoadRange_endId` ON `${TABLE_NAME}` (`endId`)"
          },
          {
            "name": "index_LoadRange_channelId",
            "unique": false,
            "columnNames": [
              "channelId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_LoadRange_channelId` ON `${TABLE_NAME}` (`channelId`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "UserMarkerLink",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`message_id` INTEGER NOT NULL, `markerId` INTEGER NOT NULL, PRIMARY KEY(`message_id`, `markerId`), FOREIGN KEY(`message_id`) REFERENCES `messages`(`message_id`) ON UPDATE NO ACTION ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED)",
        "fields": [
          {
            "fieldPath": "messageId",
            "columnName": "message_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "markerId",
            "columnName": "markerId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "message_id",
            "markerId"
          ]
        },
        "indices": [
          {
            "name": "index_UserMarkerLink_message_id",
            "unique": false,
            "columnNames": [
              "message_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_UserMarkerLink_message_id` ON `${TABLE_NAME}` (`message_id`)"
          },
          {
            "name": "index_UserMarkerLink_markerId",
            "unique": false,
            "columnNames": [
              "markerId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_UserMarkerLink_markerId` ON `${TABLE_NAME}` (`markerId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "messages",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "message_id"
            ],
            "referencedColumns": [
              "message_id"
            ]
          }
        ]
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '208e5baea655e4e044a01f3cbeca53c4')"
    ]
  }
}