plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}

apply plugin: 'maven-publish' // Apply this plugin at the top of your library build.gradle

def githubProperties = new Properties()
githubProperties.load(new FileInputStream(rootProject.file("github.properties"))) //Set env variable GPR_USER & GPR_API_KEY if not adding a properties file

def getVersionName = { ->
    return "1.2.7" // Replace with version Name
}

def getArtificatId = { ->
    return "sceytkit" // Replace with library name ID
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    if (project.plugins.findPlugin("com.android.library")) {
        from android.sourceSets.main.java.srcDirs
        from android.sourceSets.main.kotlin.srcDirs
    } else {
        from sourceSets.main.java.srcDirs
        from sourceSets.main.kotlin.srcDirs
    }
}

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "sources"
}


publishing {
    publications {
        bar(MavenPublication) {
            groupId 'com.sceytkit' // Replace with group ID
            artifactId getArtificatId()
            version getVersionName()

            artifact sourceJar
            artifact("$buildDir/outputs/aar/SceytChatUiKit-release.aar")


            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.api.allDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                }
            }
        }
    }

    /* repositories {
         maven {
             name = "GitHubPackages"
             url = uri("https://maven.pkg.github.com/UserID/REPOSITORY")
         }
     }*/

    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/maratsct/TestSceyt")
            credentials {

                username = githubProperties['gpr.usr'] ?: System.getenv("GPR_USER")
                password = githubProperties['gpr.key'] ?: System.getenv("GPR_API_KEY")
            }
        }

    }
}

android {
    compileSdk 32

    defaultConfig {
        minSdk 21
        targetSdk 32

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }
}


dependencies {
    api project(':SceytSDK-debug')
    api project(':AXEmojiView')

    implementation supportDependencies.coreKtx
    implementation supportDependencies.appCompat
    implementation supportDependencies.material
    implementation supportDependencies.constraintlayout
    implementation supportDependencies.recyclerView
    implementation supportDependencies.fragmentKtx
    implementation supportDependencies.lifecycleRuntime
    api supportDependencies.asyncLayoutInflater
    implementation supportDependencies.glide
    implementation supportDependencies.axEmoji
    implementation supportDependencies.ion
    implementation supportDependencies.firebaseBom
    implementation supportDependencies.firebaseMessaging
    implementation supportDependencies.okHttp
    implementation supportDependencies.voley
    kapt supportDependencies.roomCompiler
    implementation supportDependencies.roomRuntime
    api supportDependencies.roomKtx
    api supportDependencies.koinAndroid
    api supportDependencies.exoPlayerMedia
    api supportDependencies.exoPlayerUi
    api supportDependencies.datastore
    api supportDependencies.datastorePreferences
    implementation supportDependencies.moshiConverter
    implementation supportDependencies.jsoup
    api supportDependencies.lottie
    implementation supportDependencies.flexbox
    implementation supportDependencies.sdp
    implementation supportDependencies.ssp
}